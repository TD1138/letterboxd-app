WITH BASE_TABLE AS (
    SELECT a.FILM_ID,
           c.FILM_TITLE,
           d.KEYWORD,
           d.KEYWORD_ID,
           e.FILM_RATING,
           f.FILM_RATING_SCALED,
           CASE WHEN f.FILM_RATING_SCALED IS NOT NULL THEN 1 ELSE 0 END AS RATED
    FROM ALL_FEATURE_FILMS a
    LEFT JOIN CONTENT_TYPE b ON a.FILM_ID = b.FILM_ID
    LEFT JOIN FILM_TITLE c ON a.FILM_ID = c.FILM_ID
    LEFT JOIN FILM_KEYWORDS d ON a.FILM_ID = d.FILM_ID
    LEFT JOIN FILM_LETTERBOXD_STATS e ON a.FILM_ID = e.FILM_ID
    LEFT JOIN PERSONAL_RATING f ON a.FILM_ID = f.FILM_ID
    WHERE b.CONTENT_TYPE = 'movie'
), SCORE_TABLE AS (
    SELECT KEYWORD_ID,
           KEYWORD,
           AVG(FILM_RATING) AS MEAN_RATING,
           AVG(FILM_RATING_SCALED) AS MY_MEAN_RATING,
           AVG(FILM_RATING_SCALED) - AVG(FILM_RATING) AS MY_VARIANCE,
           ((AVG(FILM_RATING_SCALED) - AVG(FILM_RATING)) * ((SUM(RATED)+0.0)/COUNT(*))) AS VARIANCE_SCORE,
           COUNT(*) AS KEYWORD_COUNT,
           SUM(RATED) AS MY_RATING_COUNT,
           (SUM(RATED)+0.0)/COUNT(*) AS SCALER
    FROM BASE_TABLE
    WHERE KEYWORD_ID > -1
    GROUP BY KEYWORD
    HAVING MY_RATING_COUNT > 0
       AND KEYWORD_COUNT >= 50
)
SELECT a.FILM_ID,
       a.KEYWORD_ID,
       b.KEYWORD,
       b.KEYWORD_COUNT,
       b.MY_RATING_COUNT,
       b.MEAN_RATING,
       b.MY_MEAN_RATING
FROM FILM_KEYWORDS a
LEFT JOIN SCORE_TABLE b ON a.KEYWORD_ID = b.KEYWORD_ID
WHERE b.KEYWORD_ID IS NOT NULL 